stages:
  - test 
  - build
  - deploy 

image: python:3.11-slim 

version_check:
  stage: test 
  rules:
    - if: $CI_COMMIT_TAG 
  script:
    - pip install --upgrade pip 
    - pip install . 
    - ./utils/version_check.sh $CI_COMMIT_TAG

styling_check:
  stage: test 
  rules: 
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_TAG 
  before_script:
    - pip install --upgrade pip 
    - pip install ruff 
  script:
    - ruff check 
    - ruff format --check 

pytest:
  stage: test 
  before_script:
    - pip install --upgrade pip 
    - pip install pytest 
    - pip install --no-cache-dir . 
  script:
    - pytest tests/test_inputs.py 
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_TAG 


build_dist:
  stage: build 
  before_script:
    - pip install --upgrade pip 
    - pip install --upgrade build 
  script:
    - pip install . 
    - python -m build . 
  artifacts:
    paths:
      - dist/*whl 
      - dist/*tar.gz 
    expire_in: 1 week 
  rules: 
   - if: $CI_COMMIT_TAG 

git-release:
  stage: deploy 
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG 
  script:
    - echo "Running release job for tag $CI_COMMIT_TAG..."
  release:
    name: "Release $CI_COMMIT_TAG"
    description: "Release $CI_COMMIT_TAG created using the release-cli provided by gitlab."
    tag_name: "$CI_COMMIT_TAG"
    ref: "$CI_COMMIT_SHA"
  needs:
    - job: build_dist 
      artifacts: true 
    - job: version_check

pypi-release:
  stage: deploy 
  rules:
    - if: $CI_COMMIT_TAG 
  before_script:
    - pip install --upgrade pip 
    - pip install twine 
  script:
    - TWINE_PASSWORD="$PYPI_API_TOKEN" TWINE_USERNAME="__token__" twine upload dist/* 
  needs:
    - job: build_dist 
      artifacts: true 
    - job: version_check

pages:
  stage: deploy 
  variables:
    GIT_STATEGY: clone 
  before_script:
    - apt-get update 
    - apt-get install -y build-essential 
    - pip install --upgrade pip 
    - pip install sphinx sphinx-toolbox numpydoc piccolo-theme
  script:
    - cd docs/
    - make html 
    - cd ../
    - mv docs/build/html public 
  after_script:
    - anybadge -l docs -v sphinx -f docs_badge.svg -c green
  artifacts:
    paths:
      - public
      - docs_badge.svg 
    expire_in: 1 days 
  rules:
    - if: $CI_COMMIT_TAG 